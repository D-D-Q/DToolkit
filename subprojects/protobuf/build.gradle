

apply plugin: 'com.google.protobuf'



buildscript {
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.11' //支持gradle5.6
  }
}

sourceSets {
  main {
    proto {
    
      // In addition to the default 'src/main/proto'
      srcDir 'src/main/proto'
      //srcDir 'src/main/protobuf'
      //srcDir 'src/main/protocolbuffers'
      
      
      // In addition to the default '**/*.proto' (use with caution).
      // Using an extension other than 'proto' is NOT recommended,
      // because when proto files are published along with class files, we can
      // only tell the type of a file from its extension.
      //include '**/*.protodevel'
    }
  }
  test {
    proto {
      // In addition to the default 'src/test/proto'
      srcDir 'src/test/proto'
      //srcDir 'src/test/protobuf'
      //srcDir 'src/test/protocolbuffers'
    }
  }
}


dependencies {
	compile "com.google.protobuf:protobuf-java:3.11.0" // protobuf核心
	compile "com.google.protobuf:protobuf-java-util:3.11.0" // protobuf工具
}


protobuf {
  protoc {
  	
  	//本地
  	//path = '/usr/local/bin/protoc'
  	path = "$projectDir/protoc/v3_11_0/win64/protoc.exe"
  	
    //从仓库下载
    //artifact = 'com.google.protobuf:protoc:3.11.0'
  }
  
  // 目标路径
  generatedFilesBaseDir = "$projectDir/generated"
  
  
  // 生成的Task
  generateProtoTasks {
    // all() returns the collection of all protoc tasks
    all().each { task ->
      // Here you can configure the task
      
		task.builtins {
		  // This yields
		  // "--java_out=example_option1=true,example_option2:/path/to/output"
		  // on the protoc commandline, which is equivalent to
		  // "--java_out=/path/to/output --java_opt=example_option1=true,example_option2"
		  // with the latest version of protoc.
		  // option(--java_opt)是jvm参数
		  java {
		    //option 'example_option1=true'
		    //option 'example_option2'
		    //outputSubDir = "/src/main/java" // generatedFilesBaseDir下的二级目录 默认就是语言名称为目录名
		  }
		  
		  csharp { }
		  
		  // Add cpp output without any option.
		  // DO NOT omit the braces if you want this builtin to be added.
		  // This yields
		  // "--cpp_out=/path/to/output" on the protoc commandline.
		  //cpp { }
		}
		
		task.plugins {
		  // Add grpc output without any option.  grpc must have been defined in the
		  // protobuf.plugins block.
		  // This yields
		  // "--grpc_out=/path/to/output" on the protoc commandline.
		  // grpc { }
		}
      
    }

    // In addition to all(), you may select tasks by various criteria:

    // (Java-only) returns tasks for a sourceSet
    //ofSourceSet('main')

    // (Android-only selectors)
    // Returns tasks for a flavor
    //ofFlavor('demo')
    
    // Returns tasks for a buildType
    //ofBuildType('release')
    
    // Returns tasks for a variant
    //ofVariant('demoRelease')
    
    // Returns non-androidTest tasks
    //ofNonTest()
    
    // Return androidTest tasks
    //ofTest()
  }
}

clean {
    delete protobuf.generatedFilesBaseDir
}