// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: test.proto

package du.proto;

public final class TestProto {
  private TestProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface MsgOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Msg)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated sint32 intList = 2;</code>
     */
    java.util.List<java.lang.Integer> getIntListList();
    /**
     * <code>repeated sint32 intList = 2;</code>
     */
    int getIntListCount();
    /**
     * <code>repeated sint32 intList = 2;</code>
     */
    int getIntList(int index);

    /**
     * <code>repeated string stringList = 3;</code>
     */
    java.util.List<java.lang.String>
        getStringListList();
    /**
     * <code>repeated string stringList = 3;</code>
     */
    int getStringListCount();
    /**
     * <code>repeated string stringList = 3;</code>
     */
    java.lang.String getStringList(int index);
    /**
     * <code>repeated string stringList = 3;</code>
     */
    com.google.protobuf.ByteString
        getStringListBytes(int index);

    /**
     * <code>map&lt;sint32, sint32&gt; intIntMap = 4;</code>
     */
    int getIntIntMapCount();
    /**
     * <code>map&lt;sint32, sint32&gt; intIntMap = 4;</code>
     */
    boolean containsIntIntMap(
        int key);
    /**
     * Use {@link #getIntIntMapMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getIntIntMap();
    /**
     * <code>map&lt;sint32, sint32&gt; intIntMap = 4;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getIntIntMapMap();
    /**
     * <code>map&lt;sint32, sint32&gt; intIntMap = 4;</code>
     */

    int getIntIntMapOrDefault(
        int key,
        int defaultValue);
    /**
     * <code>map&lt;sint32, sint32&gt; intIntMap = 4;</code>
     */

    int getIntIntMapOrThrow(
        int key);

    /**
     * <code>map&lt;sint32, string&gt; intStringMap = 5;</code>
     */
    int getIntStringMapCount();
    /**
     * <code>map&lt;sint32, string&gt; intStringMap = 5;</code>
     */
    boolean containsIntStringMap(
        int key);
    /**
     * Use {@link #getIntStringMapMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.String>
    getIntStringMap();
    /**
     * <code>map&lt;sint32, string&gt; intStringMap = 5;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.String>
    getIntStringMapMap();
    /**
     * <code>map&lt;sint32, string&gt; intStringMap = 5;</code>
     */

    java.lang.String getIntStringMapOrDefault(
        int key,
        java.lang.String defaultValue);
    /**
     * <code>map&lt;sint32, string&gt; intStringMap = 5;</code>
     */

    java.lang.String getIntStringMapOrThrow(
        int key);

    /**
     * <code>map&lt;string, sint32&gt; stringIntMap = 6;</code>
     */
    int getStringIntMapCount();
    /**
     * <code>map&lt;string, sint32&gt; stringIntMap = 6;</code>
     */
    boolean containsStringIntMap(
        java.lang.String key);
    /**
     * Use {@link #getStringIntMapMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.Integer>
    getStringIntMap();
    /**
     * <code>map&lt;string, sint32&gt; stringIntMap = 6;</code>
     */
    java.util.Map<java.lang.String, java.lang.Integer>
    getStringIntMapMap();
    /**
     * <code>map&lt;string, sint32&gt; stringIntMap = 6;</code>
     */

    int getStringIntMapOrDefault(
        java.lang.String key,
        int defaultValue);
    /**
     * <code>map&lt;string, sint32&gt; stringIntMap = 6;</code>
     */

    int getStringIntMapOrThrow(
        java.lang.String key);

    /**
     * <code>map&lt;string, string&gt; stringStringMap = 7;</code>
     */
    int getStringStringMapCount();
    /**
     * <code>map&lt;string, string&gt; stringStringMap = 7;</code>
     */
    boolean containsStringStringMap(
        java.lang.String key);
    /**
     * Use {@link #getStringStringMapMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.String>
    getStringStringMap();
    /**
     * <code>map&lt;string, string&gt; stringStringMap = 7;</code>
     */
    java.util.Map<java.lang.String, java.lang.String>
    getStringStringMapMap();
    /**
     * <code>map&lt;string, string&gt; stringStringMap = 7;</code>
     */

    java.lang.String getStringStringMapOrDefault(
        java.lang.String key,
        java.lang.String defaultValue);
    /**
     * <code>map&lt;string, string&gt; stringStringMap = 7;</code>
     */

    java.lang.String getStringStringMapOrThrow(
        java.lang.String key);
  }
  /**
   * <pre>
   * protostuff编译时message名就是类名
   * 这里是注释
   * </pre>
   *
   * Protobuf type {@code Msg}
   */
  public  static final class Msg extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Msg)
      MsgOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Msg.newBuilder() to construct.
    private Msg(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Msg() {
      intList_ = java.util.Collections.emptyList();
      stringList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Msg(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                intList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              intList_.add(input.readSInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                intList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                intList_.add(input.readSInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                stringList_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000002;
              }
              stringList_.add(s);
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                intIntMap_ = com.google.protobuf.MapField.newMapField(
                    IntIntMapDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000004;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
              intIntMap__ = input.readMessage(
                  IntIntMapDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              intIntMap_.getMutableMap().put(
                  intIntMap__.getKey(), intIntMap__.getValue());
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                intStringMap_ = com.google.protobuf.MapField.newMapField(
                    IntStringMapDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000008;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.String>
              intStringMap__ = input.readMessage(
                  IntStringMapDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              intStringMap_.getMutableMap().put(
                  intStringMap__.getKey(), intStringMap__.getValue());
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                stringIntMap_ = com.google.protobuf.MapField.newMapField(
                    StringIntMapDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000010;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer>
              stringIntMap__ = input.readMessage(
                  StringIntMapDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              stringIntMap_.getMutableMap().put(
                  stringIntMap__.getKey(), stringIntMap__.getValue());
              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                stringStringMap_ = com.google.protobuf.MapField.newMapField(
                    StringStringMapDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000020;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
              stringStringMap__ = input.readMessage(
                  StringStringMapDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              stringStringMap_.getMutableMap().put(
                  stringStringMap__.getKey(), stringStringMap__.getValue());
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          intList_ = java.util.Collections.unmodifiableList(intList_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          stringList_ = stringList_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return du.proto.TestProto.internal_static_Msg_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 4:
          return internalGetIntIntMap();
        case 5:
          return internalGetIntStringMap();
        case 6:
          return internalGetStringIntMap();
        case 7:
          return internalGetStringStringMap();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return du.proto.TestProto.internal_static_Msg_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              du.proto.TestProto.Msg.class, du.proto.TestProto.Msg.Builder.class);
    }

    public static final int INTLIST_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> intList_;
    /**
     * <code>repeated sint32 intList = 2;</code>
     */
    public java.util.List<java.lang.Integer>
        getIntListList() {
      return intList_;
    }
    /**
     * <code>repeated sint32 intList = 2;</code>
     */
    public int getIntListCount() {
      return intList_.size();
    }
    /**
     * <code>repeated sint32 intList = 2;</code>
     */
    public int getIntList(int index) {
      return intList_.get(index);
    }
    private int intListMemoizedSerializedSize = -1;

    public static final int STRINGLIST_FIELD_NUMBER = 3;
    private com.google.protobuf.LazyStringList stringList_;
    /**
     * <code>repeated string stringList = 3;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getStringListList() {
      return stringList_;
    }
    /**
     * <code>repeated string stringList = 3;</code>
     */
    public int getStringListCount() {
      return stringList_.size();
    }
    /**
     * <code>repeated string stringList = 3;</code>
     */
    public java.lang.String getStringList(int index) {
      return stringList_.get(index);
    }
    /**
     * <code>repeated string stringList = 3;</code>
     */
    public com.google.protobuf.ByteString
        getStringListBytes(int index) {
      return stringList_.getByteString(index);
    }

    public static final int INTINTMAP_FIELD_NUMBER = 4;
    private static final class IntIntMapDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  du.proto.TestProto.internal_static_Msg_IntIntMapEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.SINT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.SINT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> intIntMap_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetIntIntMap() {
      if (intIntMap_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            IntIntMapDefaultEntryHolder.defaultEntry);
      }
      return intIntMap_;
    }

    public int getIntIntMapCount() {
      return internalGetIntIntMap().getMap().size();
    }
    /**
     * <code>map&lt;sint32, sint32&gt; intIntMap = 4;</code>
     */

    public boolean containsIntIntMap(
        int key) {
      
      return internalGetIntIntMap().getMap().containsKey(key);
    }
    /**
     * Use {@link #getIntIntMapMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer> getIntIntMap() {
      return getIntIntMapMap();
    }
    /**
     * <code>map&lt;sint32, sint32&gt; intIntMap = 4;</code>
     */

    public java.util.Map<java.lang.Integer, java.lang.Integer> getIntIntMapMap() {
      return internalGetIntIntMap().getMap();
    }
    /**
     * <code>map&lt;sint32, sint32&gt; intIntMap = 4;</code>
     */

    public int getIntIntMapOrDefault(
        int key,
        int defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetIntIntMap().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;sint32, sint32&gt; intIntMap = 4;</code>
     */

    public int getIntIntMapOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetIntIntMap().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int INTSTRINGMAP_FIELD_NUMBER = 5;
    private static final class IntStringMapDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.String> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.String>newDefaultInstance(
                  du.proto.TestProto.internal_static_Msg_IntStringMapEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.SINT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "");
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.String> intStringMap_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.String>
    internalGetIntStringMap() {
      if (intStringMap_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            IntStringMapDefaultEntryHolder.defaultEntry);
      }
      return intStringMap_;
    }

    public int getIntStringMapCount() {
      return internalGetIntStringMap().getMap().size();
    }
    /**
     * <code>map&lt;sint32, string&gt; intStringMap = 5;</code>
     */

    public boolean containsIntStringMap(
        int key) {
      
      return internalGetIntStringMap().getMap().containsKey(key);
    }
    /**
     * Use {@link #getIntStringMapMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.String> getIntStringMap() {
      return getIntStringMapMap();
    }
    /**
     * <code>map&lt;sint32, string&gt; intStringMap = 5;</code>
     */

    public java.util.Map<java.lang.Integer, java.lang.String> getIntStringMapMap() {
      return internalGetIntStringMap().getMap();
    }
    /**
     * <code>map&lt;sint32, string&gt; intStringMap = 5;</code>
     */

    public java.lang.String getIntStringMapOrDefault(
        int key,
        java.lang.String defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.String> map =
          internalGetIntStringMap().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;sint32, string&gt; intStringMap = 5;</code>
     */

    public java.lang.String getIntStringMapOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.String> map =
          internalGetIntStringMap().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int STRINGINTMAP_FIELD_NUMBER = 6;
    private static final class StringIntMapDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.Integer>newDefaultInstance(
                  du.proto.TestProto.internal_static_Msg_StringIntMapEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.SINT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.Integer> stringIntMap_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
    internalGetStringIntMap() {
      if (stringIntMap_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            StringIntMapDefaultEntryHolder.defaultEntry);
      }
      return stringIntMap_;
    }

    public int getStringIntMapCount() {
      return internalGetStringIntMap().getMap().size();
    }
    /**
     * <code>map&lt;string, sint32&gt; stringIntMap = 6;</code>
     */

    public boolean containsStringIntMap(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetStringIntMap().getMap().containsKey(key);
    }
    /**
     * Use {@link #getStringIntMapMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Integer> getStringIntMap() {
      return getStringIntMapMap();
    }
    /**
     * <code>map&lt;string, sint32&gt; stringIntMap = 6;</code>
     */

    public java.util.Map<java.lang.String, java.lang.Integer> getStringIntMapMap() {
      return internalGetStringIntMap().getMap();
    }
    /**
     * <code>map&lt;string, sint32&gt; stringIntMap = 6;</code>
     */

    public int getStringIntMapOrDefault(
        java.lang.String key,
        int defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetStringIntMap().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, sint32&gt; stringIntMap = 6;</code>
     */

    public int getStringIntMapOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetStringIntMap().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int STRINGSTRINGMAP_FIELD_NUMBER = 7;
    private static final class StringStringMapDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.String> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.String>newDefaultInstance(
                  du.proto.TestProto.internal_static_Msg_StringStringMapEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "");
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> stringStringMap_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetStringStringMap() {
      if (stringStringMap_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            StringStringMapDefaultEntryHolder.defaultEntry);
      }
      return stringStringMap_;
    }

    public int getStringStringMapCount() {
      return internalGetStringStringMap().getMap().size();
    }
    /**
     * <code>map&lt;string, string&gt; stringStringMap = 7;</code>
     */

    public boolean containsStringStringMap(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetStringStringMap().getMap().containsKey(key);
    }
    /**
     * Use {@link #getStringStringMapMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getStringStringMap() {
      return getStringStringMapMap();
    }
    /**
     * <code>map&lt;string, string&gt; stringStringMap = 7;</code>
     */

    public java.util.Map<java.lang.String, java.lang.String> getStringStringMapMap() {
      return internalGetStringStringMap().getMap();
    }
    /**
     * <code>map&lt;string, string&gt; stringStringMap = 7;</code>
     */

    public java.lang.String getStringStringMapOrDefault(
        java.lang.String key,
        java.lang.String defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetStringStringMap().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, string&gt; stringStringMap = 7;</code>
     */

    public java.lang.String getStringStringMapOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetStringStringMap().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (getIntListList().size() > 0) {
        output.writeUInt32NoTag(18);
        output.writeUInt32NoTag(intListMemoizedSerializedSize);
      }
      for (int i = 0; i < intList_.size(); i++) {
        output.writeSInt32NoTag(intList_.get(i));
      }
      for (int i = 0; i < stringList_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, stringList_.getRaw(i));
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetIntIntMap(),
          IntIntMapDefaultEntryHolder.defaultEntry,
          4);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetIntStringMap(),
          IntStringMapDefaultEntryHolder.defaultEntry,
          5);
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetStringIntMap(),
          StringIntMapDefaultEntryHolder.defaultEntry,
          6);
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetStringStringMap(),
          StringStringMapDefaultEntryHolder.defaultEntry,
          7);
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < intList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeSInt32SizeNoTag(intList_.get(i));
        }
        size += dataSize;
        if (!getIntListList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        intListMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < stringList_.size(); i++) {
          dataSize += computeStringSizeNoTag(stringList_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getStringListList().size();
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetIntIntMap().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        intIntMap__ = IntIntMapDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, intIntMap__);
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.String> entry
           : internalGetIntStringMap().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.String>
        intStringMap__ = IntStringMapDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(5, intStringMap__);
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.Integer> entry
           : internalGetStringIntMap().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer>
        stringIntMap__ = StringIntMapDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(6, stringIntMap__);
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
           : internalGetStringStringMap().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
        stringStringMap__ = StringStringMapDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(7, stringStringMap__);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof du.proto.TestProto.Msg)) {
        return super.equals(obj);
      }
      du.proto.TestProto.Msg other = (du.proto.TestProto.Msg) obj;

      boolean result = true;
      result = result && getIntListList()
          .equals(other.getIntListList());
      result = result && getStringListList()
          .equals(other.getStringListList());
      result = result && internalGetIntIntMap().equals(
          other.internalGetIntIntMap());
      result = result && internalGetIntStringMap().equals(
          other.internalGetIntStringMap());
      result = result && internalGetStringIntMap().equals(
          other.internalGetStringIntMap());
      result = result && internalGetStringStringMap().equals(
          other.internalGetStringStringMap());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getIntListCount() > 0) {
        hash = (37 * hash) + INTLIST_FIELD_NUMBER;
        hash = (53 * hash) + getIntListList().hashCode();
      }
      if (getStringListCount() > 0) {
        hash = (37 * hash) + STRINGLIST_FIELD_NUMBER;
        hash = (53 * hash) + getStringListList().hashCode();
      }
      if (!internalGetIntIntMap().getMap().isEmpty()) {
        hash = (37 * hash) + INTINTMAP_FIELD_NUMBER;
        hash = (53 * hash) + internalGetIntIntMap().hashCode();
      }
      if (!internalGetIntStringMap().getMap().isEmpty()) {
        hash = (37 * hash) + INTSTRINGMAP_FIELD_NUMBER;
        hash = (53 * hash) + internalGetIntStringMap().hashCode();
      }
      if (!internalGetStringIntMap().getMap().isEmpty()) {
        hash = (37 * hash) + STRINGINTMAP_FIELD_NUMBER;
        hash = (53 * hash) + internalGetStringIntMap().hashCode();
      }
      if (!internalGetStringStringMap().getMap().isEmpty()) {
        hash = (37 * hash) + STRINGSTRINGMAP_FIELD_NUMBER;
        hash = (53 * hash) + internalGetStringStringMap().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static du.proto.TestProto.Msg parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static du.proto.TestProto.Msg parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static du.proto.TestProto.Msg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static du.proto.TestProto.Msg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static du.proto.TestProto.Msg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static du.proto.TestProto.Msg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static du.proto.TestProto.Msg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static du.proto.TestProto.Msg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static du.proto.TestProto.Msg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static du.proto.TestProto.Msg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static du.proto.TestProto.Msg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static du.proto.TestProto.Msg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(du.proto.TestProto.Msg prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * protostuff编译时message名就是类名
     * 这里是注释
     * </pre>
     *
     * Protobuf type {@code Msg}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Msg)
        du.proto.TestProto.MsgOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return du.proto.TestProto.internal_static_Msg_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 4:
            return internalGetIntIntMap();
          case 5:
            return internalGetIntStringMap();
          case 6:
            return internalGetStringIntMap();
          case 7:
            return internalGetStringStringMap();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 4:
            return internalGetMutableIntIntMap();
          case 5:
            return internalGetMutableIntStringMap();
          case 6:
            return internalGetMutableStringIntMap();
          case 7:
            return internalGetMutableStringStringMap();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return du.proto.TestProto.internal_static_Msg_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                du.proto.TestProto.Msg.class, du.proto.TestProto.Msg.Builder.class);
      }

      // Construct using du.proto.TestProto.Msg.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        intList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        stringList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        internalGetMutableIntIntMap().clear();
        internalGetMutableIntStringMap().clear();
        internalGetMutableStringIntMap().clear();
        internalGetMutableStringStringMap().clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return du.proto.TestProto.internal_static_Msg_descriptor;
      }

      public du.proto.TestProto.Msg getDefaultInstanceForType() {
        return du.proto.TestProto.Msg.getDefaultInstance();
      }

      public du.proto.TestProto.Msg build() {
        du.proto.TestProto.Msg result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public du.proto.TestProto.Msg buildPartial() {
        du.proto.TestProto.Msg result = new du.proto.TestProto.Msg(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          intList_ = java.util.Collections.unmodifiableList(intList_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.intList_ = intList_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          stringList_ = stringList_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.stringList_ = stringList_;
        result.intIntMap_ = internalGetIntIntMap();
        result.intIntMap_.makeImmutable();
        result.intStringMap_ = internalGetIntStringMap();
        result.intStringMap_.makeImmutable();
        result.stringIntMap_ = internalGetStringIntMap();
        result.stringIntMap_.makeImmutable();
        result.stringStringMap_ = internalGetStringStringMap();
        result.stringStringMap_.makeImmutable();
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof du.proto.TestProto.Msg) {
          return mergeFrom((du.proto.TestProto.Msg)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(du.proto.TestProto.Msg other) {
        if (other == du.proto.TestProto.Msg.getDefaultInstance()) return this;
        if (!other.intList_.isEmpty()) {
          if (intList_.isEmpty()) {
            intList_ = other.intList_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureIntListIsMutable();
            intList_.addAll(other.intList_);
          }
          onChanged();
        }
        if (!other.stringList_.isEmpty()) {
          if (stringList_.isEmpty()) {
            stringList_ = other.stringList_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureStringListIsMutable();
            stringList_.addAll(other.stringList_);
          }
          onChanged();
        }
        internalGetMutableIntIntMap().mergeFrom(
            other.internalGetIntIntMap());
        internalGetMutableIntStringMap().mergeFrom(
            other.internalGetIntStringMap());
        internalGetMutableStringIntMap().mergeFrom(
            other.internalGetStringIntMap());
        internalGetMutableStringStringMap().mergeFrom(
            other.internalGetStringStringMap());
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        du.proto.TestProto.Msg parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (du.proto.TestProto.Msg) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<java.lang.Integer> intList_ = java.util.Collections.emptyList();
      private void ensureIntListIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          intList_ = new java.util.ArrayList<java.lang.Integer>(intList_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated sint32 intList = 2;</code>
       */
      public java.util.List<java.lang.Integer>
          getIntListList() {
        return java.util.Collections.unmodifiableList(intList_);
      }
      /**
       * <code>repeated sint32 intList = 2;</code>
       */
      public int getIntListCount() {
        return intList_.size();
      }
      /**
       * <code>repeated sint32 intList = 2;</code>
       */
      public int getIntList(int index) {
        return intList_.get(index);
      }
      /**
       * <code>repeated sint32 intList = 2;</code>
       */
      public Builder setIntList(
          int index, int value) {
        ensureIntListIsMutable();
        intList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint32 intList = 2;</code>
       */
      public Builder addIntList(int value) {
        ensureIntListIsMutable();
        intList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint32 intList = 2;</code>
       */
      public Builder addAllIntList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureIntListIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, intList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint32 intList = 2;</code>
       */
      public Builder clearIntList() {
        intList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList stringList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureStringListIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          stringList_ = new com.google.protobuf.LazyStringArrayList(stringList_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated string stringList = 3;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getStringListList() {
        return stringList_.getUnmodifiableView();
      }
      /**
       * <code>repeated string stringList = 3;</code>
       */
      public int getStringListCount() {
        return stringList_.size();
      }
      /**
       * <code>repeated string stringList = 3;</code>
       */
      public java.lang.String getStringList(int index) {
        return stringList_.get(index);
      }
      /**
       * <code>repeated string stringList = 3;</code>
       */
      public com.google.protobuf.ByteString
          getStringListBytes(int index) {
        return stringList_.getByteString(index);
      }
      /**
       * <code>repeated string stringList = 3;</code>
       */
      public Builder setStringList(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureStringListIsMutable();
        stringList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string stringList = 3;</code>
       */
      public Builder addStringList(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureStringListIsMutable();
        stringList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string stringList = 3;</code>
       */
      public Builder addAllStringList(
          java.lang.Iterable<java.lang.String> values) {
        ensureStringListIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, stringList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string stringList = 3;</code>
       */
      public Builder clearStringList() {
        stringList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string stringList = 3;</code>
       */
      public Builder addStringListBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureStringListIsMutable();
        stringList_.add(value);
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> intIntMap_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetIntIntMap() {
        if (intIntMap_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              IntIntMapDefaultEntryHolder.defaultEntry);
        }
        return intIntMap_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMutableIntIntMap() {
        onChanged();;
        if (intIntMap_ == null) {
          intIntMap_ = com.google.protobuf.MapField.newMapField(
              IntIntMapDefaultEntryHolder.defaultEntry);
        }
        if (!intIntMap_.isMutable()) {
          intIntMap_ = intIntMap_.copy();
        }
        return intIntMap_;
      }

      public int getIntIntMapCount() {
        return internalGetIntIntMap().getMap().size();
      }
      /**
       * <code>map&lt;sint32, sint32&gt; intIntMap = 4;</code>
       */

      public boolean containsIntIntMap(
          int key) {
        
        return internalGetIntIntMap().getMap().containsKey(key);
      }
      /**
       * Use {@link #getIntIntMapMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer> getIntIntMap() {
        return getIntIntMapMap();
      }
      /**
       * <code>map&lt;sint32, sint32&gt; intIntMap = 4;</code>
       */

      public java.util.Map<java.lang.Integer, java.lang.Integer> getIntIntMapMap() {
        return internalGetIntIntMap().getMap();
      }
      /**
       * <code>map&lt;sint32, sint32&gt; intIntMap = 4;</code>
       */

      public int getIntIntMapOrDefault(
          int key,
          int defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetIntIntMap().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;sint32, sint32&gt; intIntMap = 4;</code>
       */

      public int getIntIntMapOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetIntIntMap().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearIntIntMap() {
        internalGetMutableIntIntMap().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;sint32, sint32&gt; intIntMap = 4;</code>
       */

      public Builder removeIntIntMap(
          int key) {
        
        internalGetMutableIntIntMap().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getMutableIntIntMap() {
        return internalGetMutableIntIntMap().getMutableMap();
      }
      /**
       * <code>map&lt;sint32, sint32&gt; intIntMap = 4;</code>
       */
      public Builder putIntIntMap(
          int key,
          int value) {
        
        
        internalGetMutableIntIntMap().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;sint32, sint32&gt; intIntMap = 4;</code>
       */

      public Builder putAllIntIntMap(
          java.util.Map<java.lang.Integer, java.lang.Integer> values) {
        internalGetMutableIntIntMap().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.String> intStringMap_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.String>
      internalGetIntStringMap() {
        if (intStringMap_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              IntStringMapDefaultEntryHolder.defaultEntry);
        }
        return intStringMap_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.String>
      internalGetMutableIntStringMap() {
        onChanged();;
        if (intStringMap_ == null) {
          intStringMap_ = com.google.protobuf.MapField.newMapField(
              IntStringMapDefaultEntryHolder.defaultEntry);
        }
        if (!intStringMap_.isMutable()) {
          intStringMap_ = intStringMap_.copy();
        }
        return intStringMap_;
      }

      public int getIntStringMapCount() {
        return internalGetIntStringMap().getMap().size();
      }
      /**
       * <code>map&lt;sint32, string&gt; intStringMap = 5;</code>
       */

      public boolean containsIntStringMap(
          int key) {
        
        return internalGetIntStringMap().getMap().containsKey(key);
      }
      /**
       * Use {@link #getIntStringMapMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.String> getIntStringMap() {
        return getIntStringMapMap();
      }
      /**
       * <code>map&lt;sint32, string&gt; intStringMap = 5;</code>
       */

      public java.util.Map<java.lang.Integer, java.lang.String> getIntStringMapMap() {
        return internalGetIntStringMap().getMap();
      }
      /**
       * <code>map&lt;sint32, string&gt; intStringMap = 5;</code>
       */

      public java.lang.String getIntStringMapOrDefault(
          int key,
          java.lang.String defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.String> map =
            internalGetIntStringMap().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;sint32, string&gt; intStringMap = 5;</code>
       */

      public java.lang.String getIntStringMapOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.String> map =
            internalGetIntStringMap().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearIntStringMap() {
        internalGetMutableIntStringMap().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;sint32, string&gt; intStringMap = 5;</code>
       */

      public Builder removeIntStringMap(
          int key) {
        
        internalGetMutableIntStringMap().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.String>
      getMutableIntStringMap() {
        return internalGetMutableIntStringMap().getMutableMap();
      }
      /**
       * <code>map&lt;sint32, string&gt; intStringMap = 5;</code>
       */
      public Builder putIntStringMap(
          int key,
          java.lang.String value) {
        
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableIntStringMap().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;sint32, string&gt; intStringMap = 5;</code>
       */

      public Builder putAllIntStringMap(
          java.util.Map<java.lang.Integer, java.lang.String> values) {
        internalGetMutableIntStringMap().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.Integer> stringIntMap_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
      internalGetStringIntMap() {
        if (stringIntMap_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              StringIntMapDefaultEntryHolder.defaultEntry);
        }
        return stringIntMap_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
      internalGetMutableStringIntMap() {
        onChanged();;
        if (stringIntMap_ == null) {
          stringIntMap_ = com.google.protobuf.MapField.newMapField(
              StringIntMapDefaultEntryHolder.defaultEntry);
        }
        if (!stringIntMap_.isMutable()) {
          stringIntMap_ = stringIntMap_.copy();
        }
        return stringIntMap_;
      }

      public int getStringIntMapCount() {
        return internalGetStringIntMap().getMap().size();
      }
      /**
       * <code>map&lt;string, sint32&gt; stringIntMap = 6;</code>
       */

      public boolean containsStringIntMap(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetStringIntMap().getMap().containsKey(key);
      }
      /**
       * Use {@link #getStringIntMapMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Integer> getStringIntMap() {
        return getStringIntMapMap();
      }
      /**
       * <code>map&lt;string, sint32&gt; stringIntMap = 6;</code>
       */

      public java.util.Map<java.lang.String, java.lang.Integer> getStringIntMapMap() {
        return internalGetStringIntMap().getMap();
      }
      /**
       * <code>map&lt;string, sint32&gt; stringIntMap = 6;</code>
       */

      public int getStringIntMapOrDefault(
          java.lang.String key,
          int defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetStringIntMap().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, sint32&gt; stringIntMap = 6;</code>
       */

      public int getStringIntMapOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetStringIntMap().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearStringIntMap() {
        internalGetMutableStringIntMap().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;string, sint32&gt; stringIntMap = 6;</code>
       */

      public Builder removeStringIntMap(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableStringIntMap().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Integer>
      getMutableStringIntMap() {
        return internalGetMutableStringIntMap().getMutableMap();
      }
      /**
       * <code>map&lt;string, sint32&gt; stringIntMap = 6;</code>
       */
      public Builder putStringIntMap(
          java.lang.String key,
          int value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        
        internalGetMutableStringIntMap().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;string, sint32&gt; stringIntMap = 6;</code>
       */

      public Builder putAllStringIntMap(
          java.util.Map<java.lang.String, java.lang.Integer> values) {
        internalGetMutableStringIntMap().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.String> stringStringMap_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetStringStringMap() {
        if (stringStringMap_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              StringStringMapDefaultEntryHolder.defaultEntry);
        }
        return stringStringMap_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetMutableStringStringMap() {
        onChanged();;
        if (stringStringMap_ == null) {
          stringStringMap_ = com.google.protobuf.MapField.newMapField(
              StringStringMapDefaultEntryHolder.defaultEntry);
        }
        if (!stringStringMap_.isMutable()) {
          stringStringMap_ = stringStringMap_.copy();
        }
        return stringStringMap_;
      }

      public int getStringStringMapCount() {
        return internalGetStringStringMap().getMap().size();
      }
      /**
       * <code>map&lt;string, string&gt; stringStringMap = 7;</code>
       */

      public boolean containsStringStringMap(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetStringStringMap().getMap().containsKey(key);
      }
      /**
       * Use {@link #getStringStringMapMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String> getStringStringMap() {
        return getStringStringMapMap();
      }
      /**
       * <code>map&lt;string, string&gt; stringStringMap = 7;</code>
       */

      public java.util.Map<java.lang.String, java.lang.String> getStringStringMapMap() {
        return internalGetStringStringMap().getMap();
      }
      /**
       * <code>map&lt;string, string&gt; stringStringMap = 7;</code>
       */

      public java.lang.String getStringStringMapOrDefault(
          java.lang.String key,
          java.lang.String defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetStringStringMap().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, string&gt; stringStringMap = 7;</code>
       */

      public java.lang.String getStringStringMapOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetStringStringMap().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearStringStringMap() {
        internalGetMutableStringStringMap().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;string, string&gt; stringStringMap = 7;</code>
       */

      public Builder removeStringStringMap(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableStringStringMap().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String>
      getMutableStringStringMap() {
        return internalGetMutableStringStringMap().getMutableMap();
      }
      /**
       * <code>map&lt;string, string&gt; stringStringMap = 7;</code>
       */
      public Builder putStringStringMap(
          java.lang.String key,
          java.lang.String value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableStringStringMap().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;string, string&gt; stringStringMap = 7;</code>
       */

      public Builder putAllStringStringMap(
          java.util.Map<java.lang.String, java.lang.String> values) {
        internalGetMutableStringStringMap().getMutableMap()
            .putAll(values);
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Msg)
    }

    // @@protoc_insertion_point(class_scope:Msg)
    private static final du.proto.TestProto.Msg DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new du.proto.TestProto.Msg();
    }

    public static du.proto.TestProto.Msg getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Msg>
        PARSER = new com.google.protobuf.AbstractParser<Msg>() {
      public Msg parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Msg(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Msg> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Msg> getParserForType() {
      return PARSER;
    }

    public du.proto.TestProto.Msg getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Msg_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Msg_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Msg_IntIntMapEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Msg_IntIntMapEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Msg_IntStringMapEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Msg_IntStringMapEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Msg_StringIntMapEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Msg_StringIntMapEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Msg_StringStringMapEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Msg_StringStringMapEntry_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\ntest.proto\"\266\003\n\003Msg\022\017\n\007intList\030\002 \003(\021\022\022\n" +
      "\nstringList\030\003 \003(\t\022&\n\tintIntMap\030\004 \003(\0132\023.M" +
      "sg.IntIntMapEntry\022,\n\014intStringMap\030\005 \003(\0132" +
      "\026.Msg.IntStringMapEntry\022,\n\014stringIntMap\030" +
      "\006 \003(\0132\026.Msg.StringIntMapEntry\0222\n\017stringS" +
      "tringMap\030\007 \003(\0132\031.Msg.StringStringMapEntr" +
      "y\0320\n\016IntIntMapEntry\022\013\n\003key\030\001 \001(\021\022\r\n\005valu" +
      "e\030\002 \001(\021:\0028\001\0323\n\021IntStringMapEntry\022\013\n\003key\030" +
      "\001 \001(\021\022\r\n\005value\030\002 \001(\t:\0028\001\0323\n\021StringIntMap" +
      "Entry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\021:\0028\001\0326\n" +
      "\024StringStringMapEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005va" +
      "lue\030\002 \001(\t:\0028\001B\025\n\010du.protoB\tTestProtob\006pr" +
      "oto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_Msg_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_Msg_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Msg_descriptor,
        new java.lang.String[] { "IntList", "StringList", "IntIntMap", "IntStringMap", "StringIntMap", "StringStringMap", });
    internal_static_Msg_IntIntMapEntry_descriptor =
      internal_static_Msg_descriptor.getNestedTypes().get(0);
    internal_static_Msg_IntIntMapEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Msg_IntIntMapEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_Msg_IntStringMapEntry_descriptor =
      internal_static_Msg_descriptor.getNestedTypes().get(1);
    internal_static_Msg_IntStringMapEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Msg_IntStringMapEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_Msg_StringIntMapEntry_descriptor =
      internal_static_Msg_descriptor.getNestedTypes().get(2);
    internal_static_Msg_StringIntMapEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Msg_StringIntMapEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_Msg_StringStringMapEntry_descriptor =
      internal_static_Msg_descriptor.getNestedTypes().get(3);
    internal_static_Msg_StringStringMapEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Msg_StringStringMapEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
